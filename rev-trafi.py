# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F_7xUgGViOnyoZ6u_drdGycPdC_292Wg
"""

import pandas as pd
import streamlit as st

# Step 1: Streamlit app title
st.title("Traffic and Revenue Analysis")

# Step 2: Upload CSV file
uploaded_file = st.file_uploader("Upload a CSV file with 'traffic' and 'revenue' columns:", type=['csv'])

if uploaded_file:
    # Step 3: Load the CSV file into a pandas DataFrame
    df = pd.read_csv(uploaded_file)

    # Step 4: Ensure the CSV has the necessary columns
    if 'traffic' not in df.columns or 'revenue' not in df.columns:
        st.error("The uploaded CSV must contain 'traffic' and 'revenue' columns.")
    else:
        # Step 5: Sort the DataFrame by revenue
        df_sorted = df.sort_values(by='revenue', ascending=False).reset_index(drop=True)

        # Step 6: Calculate cumulative revenue and traffic percentages
        total_revenue = df_sorted['revenue'].sum()
        total_traffic = df_sorted['traffic'].sum()
        df_sorted['cumulative_revenue'] = df_sorted['revenue'].cumsum() / total_revenue * 100
        df_sorted['cumulative_traffic'] = df_sorted['traffic'].cumsum() / total_traffic * 100

        # Step 7: Select rows based on revenue thresholds and calculate corresponding traffic
        percentages = [20, 40, 60, 80, 100]
        all_data = []
        overview_data = []

        for percentage in percentages:
            # Select rows contributing to revenue threshold
            revenue_group = df_sorted[df_sorted['cumulative_revenue'] <= percentage]

            # If the exact threshold is not reached, include the next row
            if revenue_group.shape[0] < df_sorted[df_sorted['cumulative_revenue'] >= percentage].shape[0]:
                revenue_group = pd.concat([revenue_group, df_sorted.iloc[[revenue_group.shape[0]]]])

            # Calculate final cumulative percentages for this group
            final_revenue = revenue_group['revenue'].sum()
            final_traffic = revenue_group['traffic'].sum()
            num_pages = revenue_group.shape[0]

            # Add to overview
            overview_data.append({
                'Coverage': f"First {percentage}%",
                'Nr. Pages': num_pages,
                'Exact Revenue': f"{final_revenue / total_revenue * 100:.2f}%",
                'Exact Traffic': f"{final_traffic / total_traffic * 100:.2f}%"
            })

            # Add group data to final dataset
            revenue_group['Sheet'] = f'Top_{percentage}_Percent'
            all_data.append(revenue_group[['url', 'traffic', 'revenue', 'cumulative_traffic', 'cumulative_revenue', 'Sheet']])

        # Combine all groups into one DataFrame
        combined_data_df = pd.concat(all_data, ignore_index=True)

        # Step 8: Display the overview table
        st.subheader("Overview of Revenue and Traffic Percentages")
        overview_df = pd.DataFrame(overview_data)
        st.write(overview_df)

        # Step 9: Download the combined CSV
        output_file = combined_data_df.to_csv(index=False)
        st.download_button(
            label="Download Combined Analysis CSV",
            data=output_file,
            file_name="traffic_revenue_analysis.csv",
            mime="text/csv"
        )